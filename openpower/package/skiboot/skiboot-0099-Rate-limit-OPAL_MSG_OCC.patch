--- skiboot-skiboot-5.1.1/hw/occ.c.orig	2015-09-30 11:27:15.303934698 +0800
+++ skiboot-skiboot-5.1.1/hw/occ.c	2015-09-30 11:33:21.511941400 +0800
@@ -311,6 +311,14 @@
 	return true;
 }
 
+static bool occ_opal_msg_outstanding = false;
+static void occ_msg_consumed(void *data __unused)
+{
+	lock(&occ_lock);
+	occ_opal_msg_outstanding = false;
+	unlock(&occ_lock);
+}
+
 static void occ_throttle_poll(void *data __unused)
 {
 	struct proc_chip *chip;
@@ -344,6 +352,8 @@
 				occ_reset = false;
 		}
 	} else {
+		if (occ_opal_msg_outstanding)
+			goto done;
 		for_each_chip(chip) {
 			occ_data = chip_occ_data(chip);
 			if ((occ_data->valid == 1) &&
@@ -352,13 +362,18 @@
 				occ_msg.type = OCC_THROTTLE;
 				occ_msg.chip = chip->id;
 				occ_msg.throttle_status = occ_data->throttle;
-				rc = _opal_queue_msg(OPAL_MSG_OCC, NULL, NULL,
+				rc = _opal_queue_msg(OPAL_MSG_OCC, NULL,
+						     occ_msg_consumed,
 						     3, (uint64_t *)&occ_msg);
-				if (!rc)
+				if (!rc) {
 					chip->throttle = occ_data->throttle;
+					occ_opal_msg_outstanding = true;
+					break;
+				}
 			}
 		}
 	}
+done:
 	unlock(&occ_lock);
 }
 
